02/22

* 포맷팅
 o 출력할 문자, 숫자, 날짜 데이터에 형식을 지정하는 것
 o 변수와 텍스트를 결합해서 보기 좋은 형식의 새로운 텍스트를 만들때 사용

* format()함수 문법
 o {[인덱스]:[공백대체문자][정렬방법][자릿수][타입]}.format(변수명)
 o 인덱스
  - 인덱스: 공백대체문자 정렬방법 자릿수 타입
  - 공백대체문자는 =앞에 지정하며 지정할 때는 반드시 정렬방법, 자릿수를 표현
 o 정렬방법
  - < 기호 왼쪽정렬 ||  > 기호 오른쪽정렬 || ^기호는 가운데정렬
 o 자릿수 지정 
  - 숫자의 경우 출력할 변수보다 큰 자릿수를 지정하면 오른쪽 정렬(기본값)
  - 문자의 경우 출력할 변수보다 큰 자릿수를 지정하면 왼쪽 정렬(기본값)
  - 변수보다 작은 자리수를 지정하면 자리수 지정이 무시되고 변수 전부 출력
 o 타입: d는 10진수, f는 실수, s는 문자, b는 2진수, o는 8진수, x는 16진수
  -+를 붙이면 양수의 경우 숫자 앞에 부호를 붙여줌
  -=를 붙이면 전체 자릿수만큼 출력하는 문자의 맨 앞에 부호 표시(양수는 부호가 나타나지 않음)
  - =+를 붙이면 =도 표시
  - 자리수 앞에 0을 채우면 빈자리에 0을 채움
 o srtftime(), format() 을 이용하여 날짜 표시
  - print(strftime("%Y - %m - %d일 %H:%M:%S", now))
  - print("{:%Y년 %m월 %d일 %p %I시 %M분 %S초}".format(thatday))

* 논리연산자
 o & , | , not , and , or
  - & 와 and 연산자는 양쪽 항의 값이 모두 True 인 경우에만 True를 반환
  - | 와 or 연산자는 양쪽 항 중에서 어느 한쪽만 True 이면 True를 반환
  - ‘and’ 연산자는 False로 판별되는 첫 번째 항의 결과가 반환
  - ‘or’ 연산자는 True로 판별되는 첫 번째 항의 결과가 반환
  - 논리 반전은 not 연산자를 사용
  - 자바 또는 C 언어에서 사용하는 ! 부호를 논리 반전(not) 연산자로 사용 못함

# 숫자를 2진수로 변환하여 비트 연산가능

