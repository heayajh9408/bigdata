02/25

*모듈과 패키지
 o 모듈은 파이썬 정의와 문장을 담고 있는 파일(함수, 변수, 클래스가 있는 *.py파일)
  - 200여개의 파이썬 모듈이 파이썬 인터프리터에 포함
 o import 모듈명
  - from 모듈명 import 함수명
  - from 패키지명 import 모듈명
  - import 모듈명 as 별칭 : 모듈명을 메모리에 load하고 별칭으로 사용
 o 사용자 정의 모듈
  - 함수나 클래스 등을 파이썬 파일에 저장해서 모듈을 만들고 재사용
  - 모듈을 가져오는 순서:  (1)내장 모듈 (2) sys.path변수에 저장된 경로

* 객체지향프로그래밍
 o class 클래스명(상속받을 클래스명): 함수나 변수들 선언
  - 파이썬은 클래스와 인스턴스(객체)의 이름공간 분리되어 있음
  - 클래스와 인스턴스의 변수명이 다를 수 있음
  - 동적으로 인스턴스(객체)에 멤버 추가 가능
 o 메소드
  - 인스턴스 메소드 : 첫 인자에 self를 꼭 삽입. 객체를 통해서 호출할 메소드
  - 클래스 메소드 : @classmethod를 통해서 선언한 메소드. 첫 인자에 cls(clazz)를 꼭 삽입.
  - static 메소드 : @staticmethod를 통해서 선언한 메소드. 인자는 없음
 o 생성자와 소멸자
  - 생성자함수 : _ _init_ _(self[, 매개변수1, ...]) 객체가 생성될 때 자동 실행되며,
	       생성시 필요한 코드(객체멤버의 초기화)를 포함
  - 소멸자함수 : _ _del_ _(self) 객체가 소멸될 때 자동 실행되며 소멸 시 필요한 코드를 포함하고
                    인스턴스 객체의 레퍼런스 카운트가 0이 될 때 실행
  - 파이썬은 함수를 중복정의 할 수 없으므로 생성자 함수도 중복정의가 불가
 o 상속
  - 상속을 이용하면 부모 클래스의 모든 속성들을 자식 클래스로 물려줄 수 있음
  - 상속관계가 있을 경우 자식 클래스는 부모 클래스의 변수와 메서드를 재정의 가능
  - super()로 부모 클래스의 멤버를 참조

* 예외처리
 o try ~ except
  - else 블록: try블록에서 예외가 발생되면 except 블록 실행. 예외가 발생안되면 else블록 실행
  - finally: try 블록에 예외가 발생하든 안하든 꼭 실행하는 블록
 o python은 추상클래스를 생성할 수 없으나 raise를 이용해서 추상 클래스를 흉내냄


