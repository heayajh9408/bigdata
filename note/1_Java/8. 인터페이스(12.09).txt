12/09

*인터페이스란?
1. 작업명세서
 - 앞으로의 작업에서 만들어야 할 것들을 표현해 놓은 것
 - 구현된 것이 전혀 없는 기본 설계도(실제 구현은 implements한 클래스에서 실행)
 - 추상메소드와 상수만을 멤버로 가질 수 있음
2. 다형성을 가능하게 하는 것
 - 하나의 객체를 다향하게 많은 type으로 만들 수 있음
3. 객체를 부속품화
 - 다양한 객체를 제푹의 부속품처럼 개발자 마음대로 변경 할 수 있음

!주의점!
- private 접근 제한자 사용 불가, 객체 생성이 불가하며 변수 타입으로만 사용

*인터페이스의 다중상속
- 클래스 -> 클래스 : 단일상속 O , 다중상속 X
- 클래스 -> 인터페이스: 단일구현 O, 다중구현O
- 인터페이스 -> 인터페이스: 단일상속O, 다중상속O
- 클래스 -> (클래스,인터페이스) : 클래스를 상속받으면서 인터페이스도 구현 가능

*인터페이스와 추상클래스
- 공통점
1. 추상메소드를 가지고 있다
2. 객체 생성이 목적이 아닌 변수 타입을 정의하는 것이 목적이다
- 차이점
1. 추상클래스 = 상속을 토안 사용 , 인터페이스 =  구현을 통한 사용
2. 추상클래스 = 변수, 메소드 모든 기능 사용 가능, 인터페이스 = 오직 상수와 추상메소드
3. 추상클래스 = 상속이므로 단일 상속만 지원, 인터페이스 = 다중구현이 가능
   