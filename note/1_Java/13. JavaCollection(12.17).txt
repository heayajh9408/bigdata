12/17

*Java Collection
 - 자바에서 제공되는 Collection 자료 구조에는 크게 List, Map,  Set이 있다

1. List계열 Collection(배열과 비슷하지만 배열의 단점을 보완했다)
 o ArrayList : 배열과 매우 비슷하고 인덱스가 존재하며 데이터는 중복을 허용한다
  - 데이터 접근시간은 빠르나 데이터를 추가 or 삭제하는데 시간이 많이 걸린다
  - 비순차적으로 데이터를 추가 or 삭제하는 경우 LinkedList에 비해 빠르다
  - 메소드들: add(), size(), remove(), clear() .. 등
 o LinkedList : ArrayList와 비슷하나 비순차적으로 데이터를 추가 or 삭제하는 경우는 
                  LinkedList가 더 빠르다
 o Vector : ArrayList와 비슷하지만 속도가 떨어진다. 하지만 멀티스레드 환경에서 안전하다

2. Map 계열 Collection
 o HashMap, HashTable
  - List 계열과 다르게 인덱스가 없고 대신 키와 값만 있다
  - ex) HashMap(K,V).put
  - 키 값은 중복될 수 없다

3. Set 계열 Collection(데이터의 순서가 따로 없으며 중복을 허락하지 않는다)
 o HashSet
  - 중복된 데이터는 hashcode() 값이 같거나 equals()메소드의 결과 값에 따라 해석한다
  - 사용할 경우 hashcode, equals 오버라이딩 필요성 검토

#Iterator(반복자)
 - 데이터를 반복적으로 검색하는 유용한 인터페이스
 - HashMap과 HashSet의 경우 인덱스가 없어 사용하기 좋다
