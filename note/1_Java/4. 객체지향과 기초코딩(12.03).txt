12/03

*객체 지향 프로그램
1. 등장배경
- 절차지향 방식의 비효율성 -> 메소드 프로그램의 한계 - 객체지향 등장
2. 객체의 개념 및 클래스
- 객체는 같은 종류의 데이터와 메소드가 모여있는 구성체
  ex) 자동차(객체)= 색상,배기량...(데이터) + 드라이브,주차....(메소드)
 - 클래스는 객체를 만들기 위한 설계도
  ex) Car(자동차)라는 클래스를 만들어놓고 myPorsche라는 객체를 만들어
       myPorsche.dive or myPorsche.park 등으로 사용

*주의할점
Car kia1 = new Car();  / Car kia2 = new Car();
kia1 과 kia2는 동일한 클래스에서 생성되었다 하더라고 완전한 독립체이다.
      
*클래스의 기초적인 코딩
1. 클래스제작
- 패키지명-> 클래스명-> 데이터-> 생성자함수-> 메소드> Getter&Setter

2.생성자의 이해
- 생성자는 매개변수 있는 생성자와 없는 생성자 등 여러 종류가 있다
- 생성자가 없는 경우는 디폴트 생성자가 자동 생성한다. 단, 한 개 이상의 
  생성자가 있으면 자동생성 하지 않는다

3.this 키워드의 이해
- this란 객체 자신을 뜻한다
  ex)public Student(String name, int kor, int eng, int mat) {
		this.name=name;
		this.kor=kor;.....
		